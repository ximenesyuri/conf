snippet comp "import component" b
{% from "componentes/${1:kind}/$1_${2:name}/component.html" import $1_$2 with context %}
endsnippet

snippet from "import" b
{% from "${1:library}.html" import ${2:macro} as ${2:alias} %}
endsnippet

snippet import "import" b
{% import "${1:library}.html" as ${2:alias} %}
endsnippet

snippet imp "import" b
{% import "${1:library}.html" as ${2:alias} %}
endsnippet

snippet inc "include" b
{% include "$0.html" %}
endsnippet

snippet ext "extend" b
{% extend "$0.html" %}
endsnippet

snippet extend "extend" b
{% extend "$0.html" %}
endsnippet

snippet block "block" b
{% block $0 %}
endsnippet

snippet bl "block" b
{% block $0 %}
endsnippet

snippet eblock "block" b
{% endblock %}
endsnippet

snippet ebl "block" b
{% endblock $0 %}
endsnippet

snippet if "if" b
{% if ${1:condition} %}
{% endif %}
endsnippet

snippet endif "endif" b
{% endif %}
endsnippet

snippet elif "elif" b
{% elif %}
endsnippet

snippet else "elif" b
{% else %}
endsnippet

snippet eif "endif" b
{% endif %}
endsnippet

snippet for "for" b
{% for ${1:condition} %}
{% endfor %}
endsnippet

snippet endfor "for" b
{% endfor %}
endsnippet

snippet efor "for" b
{% endfor %}
endsnippet

snippet macro "macro" b
{% macro ${1:name}($0) %}
{% endmacro %}
endsnippet

snippet mac "macro" b
{% macro ${1:name}($0) %}
{% endmacro %}
endsnippet

snippet emac "endmacro" b
{% endmacro %}
endsnippet

snippet set "set" b
{% set ${1:variable} %}
$0
{% endset %}
endsnippet
      
snippet eset "endset" b
{% endset %}
endsnippet

snippet { "var" b
{{ ${1:var} }}
endsnippet

snippet icons "icons" b
{% import "icons/${1:type}.html" as icons_$1 %}
endsnippet

snippet newicon "icon" b 
{% macro ${1:icon_name}(size="normal", fill="black") %}
$0
{% endmacro %}
endsnippet

snippet div "div" b
<div id="" class="">
$0 
</div>
endsnippet

snippet a "a" b
<a id="" class="" href="">$0</a>
endsnippet

snippet h1 "h1" b
<h1 id="" class="">$0</h1>
endsnippet

snippet h2 "h2" b
<h2 id="" class="">$0</h2>
endsnippet

snippet h3 "h3" b
<h3 id="" class="">$0</h3>
endsnippet

snippet span "span" b
<span id="" class="">$0</span>
endsnippet
     
snippet init "init" b 
{% for theme_number, theme_data  in mock.spec.builder.themes.items() %}   
<${1:componente_name} 
    x-show="theme === '{{theme_data.type}}'"
    x-cloak
    id=""
    class=""
>
{% endfor %}
endsnippet

snippet newcomp "New component" b 
{% macro ${1:component_name}(
    x_show="",
    div_id="",
    div_class="" 
) %}
<div {% if x_show %} x-show="{{ x_show }}" {% endif %} id="{{ div_id }}" class="{{ div_class }}">
$0
</div>
{% endmacro %}
endsnippet

snippet callcomp "Call component" b
{{ ${1:component_name}(
    div_id="",
    div_class="",
    $0
)}}
endsnippet

snippet onclick "on click" b
{% if on_click %}@click="{{on_click}}"{% endif %}
$0 
endsnippet

snippet away "click_away" b
{% if click_away %}@click_away="{{click_away}}"{% endif %}
$0
endsnippet

snippet themediv "theme dependent div" b
{% for theme_number, theme_data in mock.spec.builder.themes.items() %}
    <div x-show="theme === '{{theme_data.type}}'" x-cloak>
	$0
    </div>
{% endfor %}
endsnippet
