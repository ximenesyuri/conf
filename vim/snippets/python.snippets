snippet def "def" b
def ${1:name}($0):
endsnippet

snippet try "try" b:
try:
    $0
except Exception as e:
    raise ${1:ClassErr}(e)
endsnippet

snippet except "except" b:
except Exception as e:
    raise ${1:Class}Err(e)
endsnippet

snippet exc "except" b:
except Exception as e:
    raise ${1:Class}Err(e)
endsnippet

snippet __init "__init__" b:
def __init__(self, ${1:var}):
    self.$1 = $1 
endsnippet

snippet newerr "new error class" b
class ${1:Class}Err(Exception):
    pass
endsnippet

snippet @st "@staticmethod" b
@staticmethod
$0
endsnippet

snippet @cls "@classmethod" b
@classmethod
$0
endsnippet

snippet log "log" b
log.${1:log_level}(f"$0")
endsnippet

snippet sse "sse" b
sse.${1:sse_level}(f"$0")
endsnippet
    
snippet debug "debug" b
log.debug(f"$0")
sse.debug(f" ")
endsnippet

snippet err "error" b
log.error(f"$0")
sse.error(f" ")
endsnippet

snippet done "done" b
log.done(f"$0")
sse.done(f" ")
endsnippet

snippet warn "warning" b
log.warning(f"$0")
sse.warning(f" ")
endsnippet

snippet info "info" b
log.info(f"$0")
sse.info(f" ")
endsnippet

snippet ins "isinstance" w
isinstance(${1:object}, ${2: class})
endsnippet

snippet sub "isinstance" w
issubclass(${1:subclass}, ${2: class})
endsnippet

snippet p "print" b
print($0)
endsnippet

snippet pf "printf" b
print(f"$0")
endsnippet

snippet model "new model" w
${1: Name}Model = Model(
    $0
)
endsnippet

snippet emodel "new exact model" w
${1: Name}Model = ExactModel(
    $0
)
endsnippet

snippet t "typed" b
@typed
endsnippet

snippet " "docstring" b
""" 
endsnippet

snippet "" "docstring" b
"""
$0
"""
endsnippet

snippet f "f-string" w
f"$0"
endsnippet

snippet "j "jinja string" w
"""jinja
$0
"""
endsnippet

snippet header "<header>" w 
<header>
$0
</header>
endsnippet

snippet div "<div>" w
<div>
$0
</div>
endsnippet
